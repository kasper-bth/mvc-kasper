{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
    <div class="container report-container">
        <h1>Redovisning av kursmoment i kursen mvc</h1>

        <h2><a href="#Kmom01" class="section-link">Kmom01</a></h2>
        <section id="Kmom01" class="report-section">
            <p>
                Jag har förkunskaper inom objektorientering från oopython kursen, sedan har jag läst c# förut och vi håller på med
                objektorientering i webapp som håller på samtidigt som denna kurs. Då PHP är lite annorlunda och bara ett språk jag
                har jobbat med en gång förut och det var under webtec kursen. Då jag har blivit van med hur objektorientering är
                upplagt så har jag än inte blivit bekväm med det inom PHP.
            </p>

            <p>
                PHP's modell för klasser och objekt är väldigt lik andra programmeringsspråk. Då man skapar en klass och lägger till
                egenskaper och metoder för att hantera data. Sedan kan man använda sig av $this för att referera till objektens egenskaper.
                Objekten skapar man utifrån klasserna och på så sätt kan man använda egenskaperna och metoderna från den skapade klassen.
            </p>

            <p>
                För kodbasen som jag har skapat är det lite rörigt. Det är många mappar som man nu i början inte använder som gör det lite
                svårt att navigera sig igenom alla filer och ser till att allt är på rätt ställe. Då strukturen är lite rörig så är den
                flytande då om man är i app katalogen gör det lite lättare för en att jobba igenom strukturen.
            </p>

            <p>
                En del från artikeln som jag är lite nyfiken på är säkerhet. Det är något som vi antagligen inte kommer röra under denna
                kurs men det är något som vi inte har jobbat i någon av kurserna hittills som gör mig lite nyfiken att ta en titt på.
                Sedan är jag lite nyfiken på komponenter då det är något som jag håller på med i webapp och det hade varit lite kul att
                se skillnaden mellan språken på hur komponenter är uppbyggda.
            </p>

            <p>
                Min TIL för detta kursmoment är att jag lärt mig mer om symfony och vad det innebär. Sedan har jag lärt mig mer om hur PHP
                använder objektorientering och hur det jämförs med andra programmeringsspråk.
            </p>
        </section>

        <h2><a href="#Kmom02" class="section-link">Kmom02</a></h2>
        <section id="Kmom02" class="report-section">
            <p>
                Den objektorienterade konstrukturen arv låter en klass ärva metoder och egenskaper från en annan klass. Det är
                där ordet "arv" kommer ifrån. Komposition är när en klass innehåller andra klasser som delar av sin struktur.
                Interface innebär någonting som en klass måste följa. Trait ger hur en klass gör något.
            </p>

            <p>
                Jag löste uppgiften med fyra olika klasser, för att styra hur allting fungerar de klasser är Card.php, CardGraphic.php,
                CardHand.php och DeckOfCards.php. Sedan använde jag mig av session för att styra allting i card mappen och hålla allting
                samman. Jag är nöjd med hur jag klarade av uppgiften något som jag funderade på att ändra var att ha någon typ av dropdown
                eller liknande för att navigera mellan alla kort sidor. Men för att skapa all kod så gick det bra.
            </p>

            <p>
                Att jobba med symfony har blivit lite enklare nu när jag vet hur det borde struktureras och vart allt ligger. Sedan så är det
                mycket att jobba med och mycket så även om jag fattar strukturen mycket bättre så har det ändå blivit lite trögt med att leta
                efter all kod. Men att jobba med symfony inom MVC är inte så jobbigt som jag tyckte det var under kmom01. 
            </p>

            <p>
                Min TIL för dett kursmoment var att jag lärde mig hantering av POST och GET i PHP objektorientering. Sedan att jobba med klasser
                och session för att skapa en hemsida för att hantera många olika kort sekvenser. Sedan har jag lärt mig att använda mig av mer
                commits för github.
            </p>
        </section>

        <h2><a href="#Kmom03" class="section-link">Kmom03</a></h2>
        <section id="Kmom03" class="report-section">
            <p>
                Att modellera ett kortspel med med flödesdiagram och pseudokod är något jag inte gjort förut. Det var kul att prova på något nytt
                för att förbereda och problemlösa på. Dock är det nog något som jag inte kommer göra i framtiden. Pseudokod känndes inte som att
                det hindrade mig mer än hjälpte. För att jag behövde fundera över hur det skulle se ut och sedan direkt börja proggramera samma kod.
                Det känndes som ett hinder som inte lät mig börja proggramera och testa mig fram. Flödesdiagrammet är lite mer hjälpsam då man får se 
                vad vilken del av koden som gör vad och hur allt hänger ihop.
            </p>

            <p>
                Min implementation för denna uppgift är jag relativt nöjd med. Då jag har jobbat mycket med koden för att få allt att fungera. Jag funderar
                på om jag borde haft mer klasser en för banken och spelaren till exempel och en för att hålla koll på på poängen och så vidare. För just nu har
                jag en stor klass som håller reda på allt. Sedan finns det förbättring då jag inte gjorde några av de optionella kraven då jag skulle kunna ha
                gjort spelet mer komplex och interaktivt med optionella kraven.
            </p>

            <p>
                Att jobba med symfony känns inte så konstigt som det gjorde förut. Nu har jag börjat fattat på riktigt hur allt hänger ihop. Det
                gör allting mycket lättare att lösa och fixa.
            </p>

            <p>
                Min TIL för detta kursmoment är att jag lärt mig mer om symfonys ramverk, mer om hur man programmerar objektorienterad php kod och
                sedan har jag lärt mig mer om problemlösning.
            </p>
        </section>

        <h2><a href="#Kmom04" class="section-link">Kmom04</a></h2>
        <section id="Kmom04" class="report-section">
            <p>
                Att jobba med PHPUnit var ganska tufft. Att titta på kod som man har skrivit och sedan skapa en klass för att testa all funktionalitet,
                av den koden man hade skrivit var tufft för att se allting som man behövde täcka för den delen. Men jag upplever att PHPUnit är relativt
                bra att jobba med även om det var svårt att skapa testerna.
            </p>

            <p>
                För min CardGame klass nådde jag 90% kodtäckning med min test klass. De resterade delar som inte var testade var en del utifrån CalculateScore
                metoden.
            </p>

            <p>
                Jag upplever min kod som "testbar". Jag hade flera funktioner som fungerar väl för att utföra tester. Jag tror jag hade kunnat förbättra 
                min kod på det sättet att det är väldigt mycket kod i min test kod och jag hade kunnat korta ner det genom att refaktorera min CardGame klass.
            </p>

            <p>
                Jag ändrade inte min kod för testerna. Då jag tyckte att min kod var fortfarande mycket "testbar" och kodade testerna och sedan funderade om
                någon refaktorering behövdes.
            </p>

            <p>
                Det skulle kunna lätt bli snygg och ren kod för testbar kod. Då man delar upp koden i flera delar för alla olika delar som behöver testas.
            </p>

            <p>
                Min TIL för detta kurs moment är att jag lärt mig hur man kan testa sin kod inom PHP. Sedan har jag lärt mig att kommentera kod genom att jag
                kommenterade min CardGame.php kod genom php dockblock.
            </p>
        </section>

        <h2><a href="#Kmom05" class="section-link">Kmom05</a></h2>
        <section id="Kmom05" class="report-section">
            <p>
                Det gick bra att jobba igenom övningen. Var lite förvirrande att jobba igenom databasen på detta sätt då jag har blivit lite
                van utifrån den förra databas kursen. Sedan var det lite förvirrande att hur man kunde använda MySQL för databasen så jag valde
                att använda SQLite för den anledningen.   
            </p>

            <p>
                När ag byggde upp applikationen så tänkte jag att ha en landningssida där man kan se alla böcker och information om den i en tabell.
                Sedan för att visa, radera och uppdatera så kan man göra det via tabellen. Jag tänkte lite på användargränssnittet då jag ville se till
                att det var preseneterat på ett bra sätt. Sedan så lade jag inte jätte mycket tid på själva stilningen. Det gjorde att vissa delar är lite 
                nära och bilderna hade kunnat blivit bättre.
            </p>

            <p>
                Det gick helt okej att jobba med CRUD. Det var mycket annorlunda för hur jag tidigare har jobbat med databaser för det känndes som man inte jobbade
                med databasen alls. Det känndes som tidigare uppgifter då man skapar en klass och jobbar med den skapade datan och fixar funktioner och routes där utifrån.
            </p>

            <p>
                Min uppfattning om ORM är att det ibland känns som man inte jobbar med sjävla databasen. När man jobbar i javascript känns det som man jobbar direkt mot
                databasen fast i det här fallet känns det mer som att jag jobbar emot en klass istället.
            </p>

            <p>
                Min TIL för detta kursmoment är att jag lärt mig mer om symfony. Sedan har jag lärt mig om ORM och hur man kan använda det för en databas.
            </p>
        </section>

        <h2><a href="#Kmom06" class="section-link">Kmom06</a></h2>
        <section id="Kmom06" class="report-section">
            <p>
                Jag uppfattade verktyget phpmetrics överväldigande då det var mycket siffror och svåra begrepp som man behövde förstå. Det gjorde hela metriken lite svårare
                att läsa och uppfatta då det var så mycket att hålla koll och försöka förstå. Sedan så tyckte jag den mest vikitga datan var data som handlade om komplexitet
                då den datan känndes som den var mest presenterad. Sedan uppskattade att varningar var tydligt och rakt framför en för att se och försöka lösa.
            </p>
            <p>
                Att integrera scrutinizer gick bra jag hade någon liten missöde men det löste sig snabbt. Min första känsla är att det känns som den kommunicerar tydligt vad
                felen ligger och visar vad problemen i kod kan vara och visa vad som inte blir täckt och vad som täcks. Jag tycker att i jämförelse med phpmetrics så kommunicerar
                den mycket mer vad som behöver lösas och vad problemen är och vart de ligger. Efter första bygget hade jag en kodkvalitet på 9.96 och en kodtäckning på 21%.
            </p>
            <p>
                Min syn på kodkvalitet är att göra så att man kan se vad filen gör och vad kodens uppgift är. Det gör det så att jag själv vet om det blir problem eller jag gör tester
                så kan jag se lätt var och vad felen gör. Att koda på detta sätt ger koden en kvalitet som för mig blir väldigt rätt att uprräthålla och sedan ändra och uppdatera. Jag tror
                att med badges så kan man lätt se hur ens syn på kodkvalitet blir presenterad i badges. Det gör så att man får en till syn in i hur man upprätthåller sin syn och ser om ens teori
                faktiskt stämmer överens med kodkvalitet i en mer verklighet.
            </p>
            <p>
                Min TIL för detta kursmoment är att jag har lärt mig mer om kodkvalitet. Sedan har jag lärt mig om verktyg som kan upprätthålla kodkvalitet och visa upp hur ens kod bemöter
                kodkvalitet och kodtäckning.
            </p>
        </section>

        <h2><a href="#Kmom07-10" class="section-link">Kmom07-10</a></h2>
        <section id="Kmom07-10" class="report-section">
            <h3>Krav 1-3:</h3>
            <p>
                För grundkraven såg jag till att göra det väldigt tydligt att man är på en ny sida, det gjorde jag genom att ändra titel texten, bakgrundsbild, ändra typsnitt och färger. Man tar sig till
                projektet under proj i den vanliga navbaren där man sedan kan navigera till projektet där projektet har en egen navbar. För mitt projekt valde jag att fokusera på kortspelet blackjack. I routen
                /about beskriver jag projektet kort och har även alla regler för blackjack. Sedan är min startsida där man kan börja spela under /proj där man anger sin insats väljer hur många händer man vill spela med
                och sitt namn. När man startat spelet kommer man till spelsidan där man kan se hur mycket bankroll man har, man kan se vem som spelar och sedan vilken hand som är aktiv med guld färg. Sedan trycker man hit 
                för att dra och stand för att stoppa sedan beroende på resultat så förlorar man eller vinner mot banken och man kan fortsätta spela under denna spelare eller gå tillbaks till startsidan och börja på en ny spelare.
                Om man väljer att spela vidare får man välja ny insats och hur många händer man vill spela med. Sedan har jag nått en coverage för proj på minst 90% då jag har byggt flera tester för att upprätthålla detta. Sedan har jag
                uppdaterat min readme med hur man kan starta projektet vad som innehåller och varför detta repo finns.
            </p>
            <h3>Allmänt:</h3>
            <p>
                Projektet var tufft att genomföra. Se till att följa alla regler och jobba med många händer se till att allt skulle gå smidigt var tufft att genomföra. Hade mycket problem med att få till uppdateringen av en spelare
                så man kunde fortsätta spela på samma spelare. Ett annat problem som uppstog var att banken ibland vann när spelaren skulle vinna och ibland blev det lika när spelaren skulle vinna. De här problemen uppstod mest när
                det var flera händer involverade och de inte jämfördes rätt. Jag hade mycket problem med spellogiken då jag trodde jag hade det avklarat fast det visade sig att många olika jämförelser och hur utbetalningen sker var sönder
                och fungerade inte som det skulle. Jag behövde göra en stor refaktorering av koden för att få allt att fungera som det skulle och ändra vad funktioner skulle göra jämfört med förut samt se till att koden validerar och inte har
                några stora problem. Det tog ganska långt att genomföra alla implementationer och se till att allt fungerar som det ska. Jag skulle säga att detta är ett rimligt projekt för denna
                kurs. Det finns så många vägar som man kunde ha gått för projektet och det finns så många olika vägar som kunde ta för att nå sitt mål. 
            </p>
            <h3>Avslutning:</h3>
            <p>
                Det här var den tuffaste kursen under detta program. Inte för hur svårt det är men för att materialet inte var särskilt bra. Det tog långt tid att fundera ut vad man behövde göra inför varje kursmoment sedan var det många otydliga
                delar som inte var dokumenterade bra nog. Sedan tycker jag att föreläsningarna för denna kurs har varit väldigt svaga. Jag anser att föreläsningarna har verkligen bara varit "jag går igenom övningen" och inte så mycket mer än det.
                Det gör så att en stor del av plugg tiden är inte spenderat på att jobba med koden men att förstå vad/hur man ska göra och gör så att man själv behöver göra mer forskning. Sedan var övningarna väldigt bra och man lärde sig mycket från
                de, men när kom till mer komplexa saker så saknades det mycket från en student synpunkt. Jag är missnöjd med hur denna kurs har utförts, jag skulle inte rekommendera denna kurs till kollegor/vänner och skulle nog ge denna kurs ett betyg på 4
                från en skala 1-10.
            </p>
        </section>
    </div>
    <footer class="footer">
        <p>&copy; Copyright ägs av mig och bilder tillåts att användas och har hämtats från wikipedia.</p>
    </footer>
{% endblock %}